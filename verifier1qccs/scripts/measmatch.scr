# measure before or after / equations are commented out

nat 1;
nat n;
nat m;
channel c : n;
channel cc : 1;
channel d : n;
qvar b : 1;
qvar b1 : 1;
qvar b2 : 1;
qvar q1 : n;
qvar q2 : n;
qvar q3 : n;
qvar q4 : n;
qvar q5 : n;
qvar q6 : n;
qvar qEVE : m;
dsym EPR : n,n;
dsym Z : n;
dsym Z1 : 1;
dsym PROB : n,n;
dsym EVE : m;
dsym EVE2 : n;

operator measure : n;
operator hadamards : n;

process PA
 ((meas b then d!q4.d!q6.measure[q3].discard(q3,b) saem
  ||measure[q1].d?qE.discard(q1,qE,b1))/{d})
end

process PB
 ((cc!b1.cc?b_2.cc!b_2.d?qE.discard(q1,qE)||cc?bx.cc!bx.cc?b_3.
  meas b then
   d!q4.d!q6.measure[q3].discard(q3,b,b_3)
  saem)/{d,cc})
end

environment EPR_ENV
 EPR[q3,q4] * EPR[q1,q2] * Z[q6] * EVE[qEVE] * EVE2[qE] * Z1[b]
end

environment PROB_ENV
 PROB[q1,q2] * PROB[q3, q4] * Z[q6] * EVE[qEVE] * EVE2[qE] * Z1[b]
end

equation E1 
 measure[q1](EPR[q1,q2]) = PROB[q1,q2]
end
  
equation E2 
 measure[q3](EPR[q3,q4]) = PROB[q3,q4]
end

equation E3
 Tr[q1](EPR[q1,q2]) = Tr[q1](PROB[q1,q2])
end

equation E4
 Tr[q3](EPR[q3,q4]) = Tr[q3](PROB[q3,q4])
end

configuration A
 proc PA
 env EPR_ENV
end

configuration B
 proc PB
 env PROB_ENV
end